
TODO:
* Make a version of the IntervalUnion for when I want intervals to overlap?
    * Or convince myself that I can use sparse segtrees instead? Test it on https://codeforces.com/contest/1061/problem/D
* Permanently


--------------

Maybe learn about jupyter server?

* ps(pair) is not working?
See commented output line:
    /home/dcclyde/puzzles/code/contests/2023-02-07_codeforces_838d2/B.cpp




Look at /home/dcclyde/puzzles/code/contests/2023-02-06_codeforces_841d2/C.cpp
pragmas at the top make it barrreeeellly pass.
Test which ones actually help here. Like is unroll-loops helping or hurting?
See also: https://codeforces.com/blog/entry/96344





Make mi::inv handle non-prime moduli?
I could do this by having commented code for making a static "tot" member
    which holds totient(mod).
    Or just make that a second template argument and by default it's MOD-1.

Make a version of mi that uses lls?

Mayyybe also some weird intermediate version that uses ints but correctly handles
    MOD = 1234567891?
    Or just don't bother and use the ll version?
    I should time some of this stuff and decide whether ints give any value.

I think I get into trouble sometimes with tsdbg vs ts?
Can I find an example --> fix it?
    I notice that mi has tsdbg defined now...
    I should make things default to ts better.


-----

Try to solve pe502 using generating functions?


--------------


Apparently -u in interact.sh doesn't actually protect against lack of flush in interact.py



terminal.integrated.fontWeightBold ?



pvn1 for V<V<tuple>>


What was that recent problem I talked about with Christine where I suspected FFT but there was actually some DP trick?
Can that method help on Counting Castles?
In general I need some fancy method that helps with a DP where each new entry is some convolution thing on the previous stuff.



For python template setup:

ta = [1, 5, 3]
dbg(f"{ta + ta = }")

Make a snippet that handles this.
//////
Make a new plan where we type an f-string, then remove the letter f, then I handle it nicely within dbg.

https://stackoverflow.com/questions/47339121/how-do-i-convert-a-string-into-an-f-string



ACTUALLY USEFUL:



Maybe I want assert_same(a, b) where it runs dbg() if failing?


macro for declaring N-dimensional vectors!


------

PUZZLE HUNT template:

Jacob suggests: Is it possible to access formatting info through Javascript macros?

