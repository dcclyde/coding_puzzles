
T(a1, b) + T(a2) <= T(a1) + T(a2, b).
    * If b has two choices, they should marry the poor person.

T(a, b1) + T(b2) >= T(a, b2) + T(b1).
    * If a has two choices, they should marry the rich person.

I guess it means the people who get married will always be a prefix of the women
    and a suffix of the men.


T(a1, b1) + T(a2, b2) >= T(a1, b2) + T(a2, b1).
I guess it means we'd like to marry first women to last man, 2nd to 2nd-last, etc.
We might get in trouble with some banned marriages though (due to salary condition)

[1, 5] and [3, 6]?

Any chance it's optimal to just only arrange marriages in that "nice" form until the salaries cross and then quit?

I could think about T(a1, b1) + T(a2, b2) vs. T(a1, b2) + T(a2) + T(b1).


*****

Would it become more interesting if I require s_m >= C * s_w for some C >= 1?

Some of my claims still hold.
I'll use a prefix of the women and a suffix of the men.
If a1, a2 could pair with either of b1, b2 then we should use (a1, b2) and (a2, b1).


Not so obvious how to handle deciding how many people should marry near the crossover though.

Say C = 2
[10, 20]
[25, 45]

Nah, I think the original plan still works fine.

*****

What if we require w <= m <= 2w?

We still basically prefer to pair far-apart salaries.
I could consider some kinda 2ptr stuff.

The benefit of pairing (a, b) is
    T(a) + T(b) - T(a, b)
    = 4a^2 + 4b^2 - 2(a+b)^2
    = 2a^2 + 2b^2 - 4ab
    = 2 (a-b)^2.

Biggest guy: pair with smallest girl he can reach?
Next guy: same?

~~~~~~~~~~~~~~~~~~~

OK, next try requiring w <= 2m and m <= 2w.
5 pairs with 3


Biggest person of all:
They could imagine trying to pair with the smallest person they can reach.
    If not, their fallback plan would be next smallest, etc.

Say I have

a1, a2, b1, b2
If b2 can reach a1, then b1 doesn't want a1.

Let's say b2 can reach a1.
b1 can reach a1 but not a2.

b1 a1 a2 b2

a1 b1 a2 b2?
    If b2 can reach a1 then b1 can reach both anyway.

I think the only thing to worry about is when the highest remaining items
go like B A... A B.
In that case, I may want to back up and pair b_0 with an earlier a.

What situations would make me confident that I don't need to look back anymore?

Think about DP stuff.
Let's say I know the answer for A[s:] and B[t:].


**********

What if I remove the gender split?
You can marry anyone within a 2x wealth factor.

If 100 sees 50, is that a good pair?

If we also have 80, then we still want (50, 100).
If we also have 60, same
If we also have 40...?



Will gme-sol.cpp give the right answer if we need to use a
    smaller-than-max-cardinality matching?

How would I set that up?
10, 20, 40, and like x ~ 25?

10^2 + (40-x)^2 < 20^2


!!!!!!!!!!!!!!!!!!!!!!!!!

Alternate way to try to make it more interesting:
What salaries could person a earn if they want to marry person b?

How many positions have m_j and w_j paired after the kth update?

.
